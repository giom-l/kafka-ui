
name: "Docker publish"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
jobs:

  load-image:
    runs-on: ubuntu-latest
    steps:
      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: image
          path: /tmp

      # setup containerd to preserve provenance attestations :https://docs.docker.com/build/attestations/#creating-attestations
      - name: Setup docker with containerd
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }     
                      
      - name: Load docker image into daemon
        run: |
          docker load --input /tmp/image.tar

  deploy-ghcr:
    runs-on: ubuntu-latest
    needs: load-image

    permissions:
      packages: write

    steps: 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images to GHCR
        run: |
          docker tag kafka-ui:temp ghcr.io/kafbat/kafka-ui:main
          docker tag kafka-ui:temp ghcr.io/kafbat/kafka-ui:${{ inputs.version }}
          docker push ghcr.io/kafbat/kafka-ui:main
          docker push ghcr.io/kafbat/kafka-ui:${{ inputs.version }}

  deploy-dockerhub:
    runs-on: ubuntu-latest
    needs: load-image

    steps: 
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Push images to dockerhub
        run: |
          docker tag kafka-ui:temp docker.io/kafbat/kafka-ui:main
          docker tag kafka-ui:temp docker.io/kafbat/kafka-ui:${{ inputs.version }}
          docker push docker.io/kafbat/kafka-ui:main
          docker push docker.io/kafbat/kafka-ui:${{ inputs.version }}


  deploy-ecr:
    runs-on: ubuntu-latest
    needs: load-image
    permissions:
      contents: read # To read secrets
      id-token: write # This is required for requesting the JWT

    steps: 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1 # This region only for public ECR
          role-to-assume: ${{ secrets.AWS_ROLE }}

      - name: Login to public ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Push to ECR
        env:
          REGISTRY: ${{steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: j4u0y1h1
          REPOSITORY: kafka-ui
        run: |
          docker tag kafka-ui:temp $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:main
          docker tag kafka-ui:temp $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.version }}
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:main
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.version }}          