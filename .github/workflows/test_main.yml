name: "Test Main: Build & deploy"
on:
  workflow_dispatch:

  push:
    branches: [ "feat/improve_docker_publish" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write

    steps:

      - name: prepare 
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV 

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ github.token }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: Build a jar
        id: build
        run: |
          ./mvnw -B -ntp versions:set -DnewVersion=$GITHUB_SHA
          ./mvnw -V -B -ntp clean package -Pprod -DskipTests
          export VERSION=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      # docker images

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & push by digest
        id: docker_build_and_push_by_digest
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: api
          platforms: ${{ matrix.platform }} #linux/amd64,linux/arm64
          #provenance: false
          #push: false
          tags: |
            ghcr.io/giom-l/kafka-ui:${{ steps.build.outputs.version }}
            ghcr.io/giom-l/kafka-ui:main
            gocho/kafka-ui:${{ steps.build.outputs.version }}
            gocho/kafka-ui:main            
          build-args: |
            JAR_FILE=api-${{ steps.build.outputs.version }}.jar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=image, name=kafka-ui,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.docker_build_and_push_by_digest.outputs.digest }}"    
          touch "/tmp/digest/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      # - name: Upload docker image
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: image
      #     path: /tmp/image.tar
      #     retention-days: 7

  deploy-ghcr:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps: 
      # - name: Download docker image
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: image
      #     path: /tmp

      # - name: Load Docker image
      #   run: |
      #     docker load --input /tmp/image.tar
      #     docker ls -a
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          docker ls -a
        
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: "giom-l"
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Login to Dockerhub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build & push docker image
      #   id: docker_build_and_push
      #   uses: docker/build-push-action@v5
      #   with:
      #     builder: ${{ steps.buildx.outputs.name }}
      #     context: api
      #     platforms: linux/amd64,linux/arm64
      #     provenance: false
      #     push: true
      #     tags: |
      #       ghcr.io/giom-l/kafka-ui:${{ steps.build.outputs.version }}
      #       ghcr.io/giom-l/kafka-ui:main
      #       gocho/kafka-ui:${{ steps.build.outputs.version }}
      #       gocho/kafka-ui:main            
      #     build-args: |
      #       JAR_FILE=api-${{ steps.build.outputs.version }}.jar
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
