
name: "Docker publish"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  deploy:
    strategy:
      matrix:
        - registry: docker.io
          owner: ${{ secrets.DOCKERHUB_USERNAME }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: kafka-ui
        - registry: ghcr.io
          owner: ${{ github.actor }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: kafka-ui
        - registry: ecr
          owner: j4u0y1h1
          repository: kafka-ui   

          
    runs-on: ubuntu-latest
    steps: 
      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: image
          path: /tmp

      # setup containerd to preserve provenance attestations :https://docs.docker.com/build/attestations/#creating-attestations
      - name: Setup docker with containerd
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }     
                      
      - name: Load docker image into daemon
        run: |
          docker load --input /tmp/image.tar

      - name: Login to ${{ matrix.registry }}
        if: matrix.registry == 'docker.io' || matrix.registry == 'ghcr.io' 
        uses: docker/login-action@v3
        with:
          username: ${{ matrix.username }}
          password: ${{ matrix.password }}

      - name: Configure AWS credentials
        if: matrix.registry == 'ecr'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1 # This region only for public ECR
          role-to-assume: ${{ secrets.AWS_ROLE }}
  
      - name: Login to public ECR
        if: matrix.registry == 'ecr'
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public          
        
      - name: Push images to ${{ matrix.registry }}
        env: 
          REGISTRY: ${{ matrix.registry == 'ecr' && steps.login-ecr-public.outputs.registry || matrix.registry }}
        run: |
          docker tag kafka-ui:temp $REGISTRY/${{ matrix.owner }}/${{ matrix.repository }}:main
          docker tag kafka-ui:temp $REGISTRY/${{ matrix.owner }}/${{ matrix.repository }}:${{ inputs.version }}
          docker push $REGISTRY/${{ matrix.owner }}/${{ matrix.repository }}:main
          docker push $REGISTRY/${{ matrix.owner }}/${{ matrix.repository }}:${{ inputs.version }}
    