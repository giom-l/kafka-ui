
name: "Docker ECR publish"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      generic_tag:
        required: true
        type: string

jobs:
  deploy-ecr:
    runs-on: ubuntu-latest
    permissions:
      contents: read # To read secrets
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: image
          path: /tmp

      # setup containerd to preserve provenance attestations :https://docs.docker.com/build/attestations/#creating-attestations
      - name: Setup docker with containerd
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Load docker image into daemon
        run: |
          docker load --input /tmp/image.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1 # This region only for public ECR
          role-to-assume: ${{ secrets.AWS_ROLE }}

      - name: Login to public ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Push to ECR
        env:
          REGISTRY: ${{steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: j4u0y1h1
          REPOSITORY: kafka-ui
        run: |
          docker tag kafka-ui:temp $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.generic_tag }}
          docker tag kafka-ui:temp $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.version }}
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.generic_tag }}
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:${{ inputs.version }}
